services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cat_weight_tracker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    # Improve startup time by not exposing ports
    expose:
      - "5432"

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=cat_weight_tracker
    command: >
      bash -c "
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 4000 --reload
      "
    volumes:
      - ./backend:/app
    restart: on-failure
    # Set resource limits for faster startup
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: cat-weight-tracker-frontend-dev
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tsconfig.node.json:/app/tsconfig.node.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/index.html:/app/index.html
      - ./frontend/biome.json:/app/biome.json
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/public:/app/public
      - ./frontend/.env.development:/app/.env
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/.eslintrc.json:/app/.eslintrc.json
      - ./frontend/.npmrc:/app/.npmrc
      - ./frontend/install-deps.sh:/app/install-deps.sh
      # Use a named volume for node_modules to avoid overwriting with host directory
      - frontend_node_modules:/app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:4000
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - NODE_OPTIONS=--max-old-space-size=4096
    stdin_open: true
    tty: true
    # Increased memory limit to prevent OOM during npm install
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 4G

volumes:
  postgres_data:
  frontend_node_modules: