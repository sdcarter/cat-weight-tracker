version: '3'

tasks:
  test:
    desc: Run frontend tests
    cmds:
      - echo "Running frontend tests..."
      - docker-compose -f {{.ROOT_DIR}}/docker-compose.{{.ENV}}.yml run --rm frontend npm test
    vars:
      ENV: '{{.ENV | default "dev"}}'
      ROOT_DIR: '{{.ROOT_DIR | default ".."}}'

  lint:
    desc: Run frontend linting
    cmds:
      - echo "Running frontend linting..."
      - docker-compose -f {{.ROOT_DIR}}/docker-compose.{{.ENV}}.yml run --rm frontend npm run lint
    vars:
      ENV: '{{.ENV | default "dev"}}'
      ROOT_DIR: '{{.ROOT_DIR | default ".."}}'

  lint-fix:
    desc: Fix frontend linting issues
    cmds:
      - echo "Running frontend linting with auto-fix..."
      - docker-compose -f {{.ROOT_DIR}}/docker-compose.{{.ENV}}.yml run --rm frontend npm run lint:fix
    vars:
      ENV: '{{.ENV | default "dev"}}'
      ROOT_DIR: '{{.ROOT_DIR | default ".."}}'

  shell:
    desc: Open a shell in the frontend container
    cmds:
      - docker-compose -f {{.ROOT_DIR}}/docker-compose.{{.ENV}}.yml exec frontend sh
    vars:
      ENV: '{{.ENV | default "dev"}}'
      ROOT_DIR: '{{.ROOT_DIR | default ".."}}'
      
  rebuild:
    desc: Rebuild and restart the frontend container
    cmds:
      - echo "Rebuilding frontend container..."
      - docker-compose -f {{.ROOT_DIR}}/docker-compose.{{.ENV}}.yml build frontend
      - docker-compose -f {{.ROOT_DIR}}/docker-compose.{{.ENV}}.yml up -d frontend
    vars:
      ENV: '{{.ENV | default "prod"}}'
      ROOT_DIR: '{{.ROOT_DIR | default ".."}}'