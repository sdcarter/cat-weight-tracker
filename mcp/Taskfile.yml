version: '3'

tasks:
  start:
    desc: Start Atlassian MCP server
    cmds:
      - echo "Starting Atlassian MCP server..."
      - |
        # Check if mcp.json exists, if not create it
        if [ ! -f "../mcp.json" ]; then
          echo "Creating default mcp.json file..."
          cat > ../mcp.json << 'EOF'
        {
          "mcpServers": {
            "mcp-atlassian": {
              "command": "docker",
              "args": [
                "run",
                "-i",
                "--rm",
                "-e", "CONFLUENCE_URL",
                "-e", "CONFLUENCE_USERNAME",
                "-e", "CONFLUENCE_API_TOKEN",
                "-e", "JIRA_URL",
                "-e", "JIRA_USERNAME",
                "-e", "JIRA_API_TOKEN",
                "ghcr.io/sooperset/mcp-atlassian:latest"
              ],
              "env": {}
            }
          }
        }
        EOF
        fi
        
        # Run the MCP server using the configuration
        docker run -d --name atlassian-mcp -p 9000:8080 \
          -v $(pwd)/../mcp.json:/app/mcp.json \
          --env-file $(pwd)/../.env \
          ghcr.io/sooperset/mcp-atlassian:latest
        
        echo "Atlassian MCP server is starting up at http://localhost:9000"
        echo "Note - You'll need to update .env with your Atlassian credentials"

  stop:
    desc: Stop Atlassian MCP server
    cmds:
      - echo "Stopping Atlassian MCP server..."
      - docker stop atlassian-mcp || true
      - docker rm atlassian-mcp || true
      - echo "Atlassian MCP server has been stopped."
      - echo "Your configuration is preserved in .env."

  status:
    desc: Check status of Atlassian MCP server
    cmds:
      - |
        echo "Checking MCP server status..."
        echo "Atlassian server -"
        docker ps --filter "name=atlassian-mcp" --format "{{.Names}}: {{.Status}}" || echo "No MCP server running"
        
  logs:
    desc: Show logs for MCP server
    cmds:
      - docker logs {{.FOLLOW}} atlassian-mcp
    vars:
      FOLLOW: '{{if .FOLLOW}}-f{{end}}'